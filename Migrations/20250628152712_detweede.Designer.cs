// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using media_audio.Interfaces;

#nullable disable

namespace media_audio.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250628152712_detweede")]
    partial class detweede
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("data.models.AlbumDetails", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlbumTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("Allowed")
                        .HasColumnType("longtext");

                    b.Property<string>("Artists")
                        .HasColumnType("longtext");

                    b.Property<string>("CoverUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("WorldIdentfier")
                        .HasColumnType("longtext");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("AlbumId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("data.models.CDDetails", b =>
                {
                    b.Property<int>("CDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.HasKey("CDId");

                    b.HasIndex("AlbumId");

                    b.ToTable("CDS");
                });

            modelBuilder.Entity("data.models.TrackDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CDDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CDDetailsId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("data.models.CDDetails", b =>
                {
                    b.HasOne("data.models.AlbumDetails", "Album")
                        .WithMany("Cds")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("data.models.TrackDetails", b =>
                {
                    b.HasOne("data.models.CDDetails", "cDDetails")
                        .WithMany("SongTitles")
                        .HasForeignKey("CDDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cDDetails");
                });

            modelBuilder.Entity("data.models.AlbumDetails", b =>
                {
                    b.Navigation("Cds");
                });

            modelBuilder.Entity("data.models.CDDetails", b =>
                {
                    b.Navigation("SongTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
